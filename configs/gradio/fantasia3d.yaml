name: "fantasia3d"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs-gradio"
seed: 0

data_type: "random-camera-datamodule"
data:
  batch_size: 1
  width: 512
  height: 512
  camera_distance_range: [3, 3]
  fovy_range: [25, 45]
  camera_perturb: 0.
  center_perturb: 0.
  up_perturb: 0.
  elevation_range: [-10, 45]
  azimuth_range: [-180, 180]
  batch_uniform_azimuth: true
  eval_camera_distance: 3.
  eval_fovy_deg: 45.

system_type: "fantasia3d-system"
system:
  latent_steps: 1000
  geometry_type: "implicit-sdf"
  geometry:
    radius: 1.0
    n_feature_dims: 0
    isosurface_resolution: 128
    isosurface_deformable_grid: true
    isosurface_coarse_to_fine: false

    # initialize SDF by optimization
    shape_init: sphere
    shape_init_params: 0.5

    # or you can initialize SDF using a guide mesh
    # shape_init: mesh:load/shapes/human.obj
    # shape_init_params: 0.9
    # shape_init_mesh_up: +y
    # shape_init_mesh_front: +z

    # an alternative initialization implementation:
    # you can initialize SDF to sphere/ellipsoid by adding a bias value
    # which leads to more smooth initialized shape
    # sdf_bias: sphere
    # sdf_bias_params: 0.5
    # DO NOT use the two initialization methods together

  material_type: "no-material" # unused
  material:
    n_output_dims: 0

  background_type: "solid-color-background" # unused

  renderer_type: "nvdiff-rasterizer"
  renderer:
    context_type: cuda

  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    prompt: ???

  guidance_type: "stable-diffusion-guidance"
  guidance:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    guidance_scale: 100.
    max_step_percent: 0.5
    weighting_strategy: fantasia3d

  exporter_type: "mesh-exporter"
  exporter:
    fmt: obj
    save_uv: false
    save_texture: false
    context_type: cuda

  loggers:
    wandb:
      enable: false
      project: "threestudio"
      name: None

  loss:
    lambda_sds: 1.
    lambda_normal_consistency: 0.

  optimizer:
    name: AdamW
    args:
      lr: 0.001
      betas: [0.9, 0.99]
      eps: 1.e-15

trainer:
  max_steps: 5000
  log_every_n_steps: 1
  num_sanity_val_steps: 1
  val_check_interval: 200
  enable_progress_bar: true
  precision: 16-mixed

checkpoint:
  save_last: false
  save_top_k: -1
  every_n_train_steps: 0 # do not save checkpoints during training
